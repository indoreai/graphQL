{"version":3,"sources":["Types.js","components/Continent-List/Continent-List.component.jsx","pages/continents/continents.component.jsx","components/Countries/Countries.Component.jsx","pages/continent-details/continent-details.component.jsx","App.js","index.js","config/config.js"],"names":["GET_CONTINENT_DETAILS","gql","GET_CONTINENTS","withRouter","code","name","history","ListGroup","Item","onClick","push","ContinentsClick","className","useQuery","data","loading","error","Card","variant","length","map","row","CountriesComp","props","variables","match","params","id","continent","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","App","exact","path","component","ContinentsComp","ContinentDetails","cache","InMemoryCache","link","HttpLink","uri","client","ApolloClient","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33cf1836.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\n//>> For Get Single Continents Details type......\r\nexport const GET_CONTINENT_DETAILS = gql`\r\nquery continent($code: ID!) {\r\n  continent(code: $code) {\r\n      name,\r\n      code,\r\n      countries {\r\n          name,\r\n           code,\r\n           native,\r\n           languages {\r\n             name,\r\n             code\r\n           }\r\n      }\r\n  }\r\n}\r\n`;\r\n\r\n//Get Contentinents Type....\r\nexport const GET_CONTINENTS = gql`\r\n{\r\n  continents {\r\n     code\r\n      name,\r\n      countries {\r\n      name,\r\n       code,\r\n       native\r\n      }\r\n    }\r\n  }`;\r\n\r\n\r\n","\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nconst ContinentListComp = ({ code, name, history }) => {\r\n    const ContinentsClick = (code) => {\r\n        return history.push('/continent-details/' + code)\r\n    }\r\n    return <ListGroup.Item onClick={() => ContinentsClick(code)} className='text-justify text-center text-uppercase'>{name}<sup className='font-weight-light font-italic'>{code}</sup></ListGroup.Item>\r\n}\r\n\r\n\r\n\r\nexport default withRouter(ContinentListComp);","import './continents.style.css';\r\nimport { ListGroup, Card } from 'react-bootstrap';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { GET_CONTINENTS } from '../../Types';\r\nimport ContinentListComp from '../../components/Continent-List/Continent-List.component'\r\nconst ContinentsComp = ({ history }) => {\r\n   const { data, loading, error } = useQuery(GET_CONTINENTS);\r\n   if (loading) return <p>Loading...</p>;\r\n   if (error) return <p>Error</p>;\r\n\r\n   const ContinentsClick = (code) => {\r\n      return history.push('/continent-details/' + code)\r\n   }\r\n   return <Card>\r\n      <nav className=\"navbar navbar-dark nav-color \">\r\n         Continent List\r\n      </nav>\r\n\r\n      <ListGroup variant=\"flush\">\r\n         {\r\n            data['continents'].length > 0 ?\r\n               data['continents'].map((row) => {\r\n                  return (<ContinentListComp key={row.code} {...row} onClick={() => ContinentsClick(row.code)} />)\r\n               })\r\n               : null\r\n         }\r\n      </ListGroup>\r\n   </Card>\r\n};\r\n\r\n\r\nexport default withRouter(ContinentsComp);","\r\n\r\n\r\nconst CountriesComp = ({ name, code }) => (\r\n    <div className=\"col-md-3\">\r\n        <h3 className=\"display-5\">{name}</h3>\r\n        <p>\r\n            Contry name is {name} and this code is : {code}\r\n        </p>\r\n\r\n    </div>\r\n);\r\n\r\nexport default CountriesComp;","\r\n\r\nimport React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_CONTINENT_DETAILS } from '../../Types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CountriesComp from '../../components/Countries/Countries.Component';\r\nimport './continent-details.style.css'\r\nconst ContinentDetails = (props) => {\r\n  const { loading, data, error } = useQuery(\r\n    GET_CONTINENT_DETAILS,\r\n    { variables: { code: props.match.params.id } }\r\n  );\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Oops!! Something wrong!!</p>;\r\n  let { continent } = data;\r\n\r\n  return (<div>\r\n    <nav className=\"navbar navbar-dark nav-color\">\r\n      <div className=\"container-fluid\">\r\n        \r\n        <span className=\"navbar-brand\" >Continent Detail </span>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"navbar-brand\">\r\n              <span className=\"nav-link\" onClick={() => props.history.push('/')}>Continent List <span className=\"sr-only\">(current)</span></span>\r\n            </li>\r\n          </ul>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n    <main role=\"main\" className=\"container-fluid \">\r\n      <div className=\"row bg mb15\">\r\n        <div className=\"col\">\r\n          <div className=\"jumbotron\">\r\n            <h1 className=\"display-2\">{continent.name}</h1>\r\n            <p className=\"lead\">This Continent Name is {continent.name}.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-md-12 mb-4\">\r\n          <p>\r\n            {continent.name} based Country and langauges here.\r\n      </p>\r\n          <h3 className=\"display-3\">Country List</h3>\r\n\r\n\r\n          <div className=\"row\">\r\n            {\r\n              continent['countries'].map(row => {\r\n                return <CountriesComp key={row.code} {...row} />\r\n              })\r\n            }\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n      </div>\r\n    </main>\r\n    <footer className=\"container-fluid foter\">\r\n      <div className=\"row bg\">\r\n        <div className=\"col-lg-12\">\r\n          <p className=\"text-center\">Original design by <span>IndoreAI</span></p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  </div>);\r\n};\r\n\r\nexport default withRouter(ContinentDetails);","\n\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport ContinentsComp from './pages/continents/continents.component';\nimport ContinentDetails from './pages/continent-details/continent-details.component';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={ContinentsComp} />\n        <Route path=\"/continent-details/:id\" component={ContinentDetails} />\n      </Switch>\n    </Router>);\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { API_END_POINT } from './config/config';\nconst cache = new InMemoryCache();\n//API End Point ....\nconst link = new HttpLink({\n  uri: API_END_POINT\n});\n// Apollo Client ....\nconst client = new ApolloClient({\n  cache,\n  link\n})\nReactDOM.render(<ApolloProvider client={client}><App /></ApolloProvider>, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","export const API_END_POINT = 'https://countries.trevorblades.com/';"],"sourceRoot":""}